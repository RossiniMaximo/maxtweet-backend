"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/tweet";
exports.ids = ["pages/api/tweet"];
exports.modules = {

/***/ "date-fns/isAfter":
/*!***********************************!*\
  !*** external "date-fns/isAfter" ***!
  \***********************************/
/***/ ((module) => {

module.exports = require("date-fns/isAfter");

/***/ }),

/***/ "firebase-admin":
/*!*********************************!*\
  !*** external "firebase-admin" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("firebase-admin");

/***/ }),

/***/ "jsonwebtoken":
/*!*******************************!*\
  !*** external "jsonwebtoken" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("jsonwebtoken");

/***/ }),

/***/ "micro-method-router":
/*!**************************************!*\
  !*** external "micro-method-router" ***!
  \**************************************/
/***/ ((module) => {

module.exports = require("micro-method-router");

/***/ }),

/***/ "random-int":
/*!*****************************!*\
  !*** external "random-int" ***!
  \*****************************/
/***/ ((module) => {

module.exports = import("random-int");;

/***/ }),

/***/ "(api)/./controllers/tweets.ts":
/*!*******************************!*\
  !*** ./controllers/tweets.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addComment\": () => (/* binding */ addComment),\n/* harmony export */   \"createTweet\": () => (/* binding */ createTweet),\n/* harmony export */   \"deleteTweetById\": () => (/* binding */ deleteTweetById),\n/* harmony export */   \"dislikeComment\": () => (/* binding */ dislikeComment),\n/* harmony export */   \"getLatestTweets\": () => (/* binding */ getLatestTweets),\n/* harmony export */   \"getTweetById\": () => (/* binding */ getTweetById),\n/* harmony export */   \"getTweetsWithMedia\": () => (/* binding */ getTweetsWithMedia),\n/* harmony export */   \"likeComment\": () => (/* binding */ likeComment),\n/* harmony export */   \"tweetActionCounterUpdater\": () => (/* binding */ tweetActionCounterUpdater),\n/* harmony export */   \"tweetActionStatusRemover\": () => (/* binding */ tweetActionStatusRemover),\n/* harmony export */   \"updateOneTweet\": () => (/* binding */ updateOneTweet)\n/* harmony export */ });\n/* harmony import */ var random_int__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! random-int */ \"random-int\");\n/* harmony import */ var _user__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./user */ \"(api)/./controllers/user.ts\");\n/* harmony import */ var models_tweets__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! models/tweets */ \"(api)/./models/tweets.ts\");\n/* harmony import */ var models_user__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! models/user */ \"(api)/./models/user.ts\");\n/* harmony import */ var date_fns_isAfter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! date-fns/isAfter */ \"date-fns/isAfter\");\n/* harmony import */ var date_fns_isAfter__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(date_fns_isAfter__WEBPACK_IMPORTED_MODULE_4__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([random_int__WEBPACK_IMPORTED_MODULE_0__]);\nrandom_int__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\nasync function createTweet(tweetBody, token) {\n    const user = await (0,_user__WEBPACK_IMPORTED_MODULE_1__.getMe)(token.authId);\n    const id = (0,random_int__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(10000, 99999);\n    const shapeTweet = {\n        userName: user.data.fullname,\n        userId: user.data.generatedId,\n        profilePicture: user.data.pics.profilePicture,\n        content: tweetBody.content,\n        img: tweetBody.imgURL || \"\",\n        createdAt: new Date(),\n        mode: tweetBody.tweetMode,\n        id: id,\n        info: [\n            {\n                likes: 0,\n                retweets: 0,\n                saves: 0,\n                comments: 0\n            }\n        ],\n        comments: [\n            {}\n        ]\n    };\n    user.data.tweets.push(shapeTweet);\n    user.data.feed.push(shapeTweet);\n    await user.push();\n    const tweet = await models_tweets__WEBPACK_IMPORTED_MODULE_2__.Tweets.createTweet(shapeTweet);\n    user.data.followers.map(async (followerId)=>{\n        const follower = await models_user__WEBPACK_IMPORTED_MODULE_3__.User.findById(followerId);\n        await follower.pull();\n        follower.data.feed.push(tweet.data);\n        await follower.push();\n    });\n    return true;\n}\nasync function getTweetById(tweetId) {\n    const tweet = await models_tweets__WEBPACK_IMPORTED_MODULE_2__.Tweets.findById(tweetId);\n    return tweet;\n}\nasync function deleteTweetById(tweetId) {\n    const id = Number(tweetId);\n    const tweet = await models_tweets__WEBPACK_IMPORTED_MODULE_2__.Tweets.findById(id);\n    const userId = tweet.data.userId;\n    const user = await models_user__WEBPACK_IMPORTED_MODULE_3__.User.findById(userId);\n    const result = user.data.tweets.find((tweet)=>{\n        if (tweet.id == id) {\n            return tweet;\n        }\n    });\n    // El index devuelve la posici贸n del tweet encontrado en el array\n    // Para luego removerlo usando splice\n    const index = user.data.tweets.indexOf(result);\n    if (index > -1) {\n        // Splice va a remover el elemento que coincida con la posici贸n del index y va a remover ese elemento\n        // debido al 1.(remover 1 elemento)\n        user.data.tweets.splice(index, 1);\n        await user.push();\n    }\n    user.data.followers.map(async (f)=>{\n        const follower = await models_user__WEBPACK_IMPORTED_MODULE_3__.User.findById(f);\n        follower.data.feed.find((t, index)=>{\n            if (t != undefined && t.id == id) {\n                follower.data.feed.splice(index, 1);\n            }\n        });\n        follower.data.likes.find((t, index)=>{\n            if (t != undefined && t.id == id) {\n                follower.data.likes.splice(index, 1);\n            }\n        });\n        follower.data.saves.find((t, index)=>{\n            if (t != undefined && t.id == id) {\n                follower.data.saves.splice(index, 1);\n            }\n        });\n        await follower.push();\n    });\n    await tweet.ref.delete();\n    return {\n        deleted: true\n    };\n}\nasync function updateOneTweet(tweetId, body) {\n    const tweet = await models_tweets__WEBPACK_IMPORTED_MODULE_2__.Tweets.findById(tweetId);\n    const userId = tweet.data.userId;\n    const user = await models_user__WEBPACK_IMPORTED_MODULE_3__.User.findById(userId);\n    await user.pull();\n    // Aca actualiza el tweet de la colecci贸n Tweets.\n    if (body.content) {\n        tweet.data.content = body.content;\n    }\n    if (body.img) {\n        tweet.data.img = body.img;\n    }\n    await tweet.push();\n    // Aca actualiza el tweet del usuario dentro de  la colleci贸n Usuarios.\n    user.data.tweets.find(async (tweet)=>{\n        if (tweet.id == tweetId) {\n            tweet.content = body.content || \"\";\n            tweet.img = body.img || \"\";\n            tweet.tweetMode = body.tweetMode || \"\";\n            await user.push();\n        }\n    });\n    // Aca Actualiza el tweet dentro del feed de los usuarios seguidores del usuario padre.\n    user.data.followers.map(async (userIds)=>{\n        const userFollower = await models_user__WEBPACK_IMPORTED_MODULE_3__.User.findById(userIds);\n        await userFollower.pull();\n        const result = userFollower.data.feed.find(async (t)=>{\n            if (t.id == tweetId) {\n                t.content = tweet.data.content;\n                t.img = tweet.data.img;\n                t.tweetMode = tweet.data.mode;\n                await userFollower.push();\n            }\n        });\n        return result;\n    });\n}\n// Suma 1 al contador de la action correspondiente al tweet obtenido mediante el tweetId.\nasync function tweetActionCounterUpdater(action, tweetId, token) {\n    // Aca obtiene las referencias a los tweets de las collections Tweet y User\n    // para actualizarle los datos a sus respectivos docs y a el feed de sus followers.\n    const tweetRef = await getTweetById(tweetId);\n    const tweetOwnerRef = await models_user__WEBPACK_IMPORTED_MODULE_3__.User.findById(tweetRef.data.userId);\n    const me = await (0,_user__WEBPACK_IMPORTED_MODULE_1__.getMe)(token);\n    const ownerTweet = tweetOwnerRef.data.tweets.find((t)=>{\n        if (t.id == tweetId) {\n            return t;\n        }\n    });\n    const tweetInFollowerFeedAndFollower = await Promise.allSettled(tweetOwnerRef.data.followers.map(async (f)=>{\n        const followerRef = await models_user__WEBPACK_IMPORTED_MODULE_3__.User.findById(f);\n        const tweet = followerRef?.data.feed.find((t)=>{\n            if (t.id == tweetId) {\n                return t;\n            }\n        });\n        return {\n            tweet,\n            followerRef: followerRef\n        };\n    }));\n    //  Here deconstructs the tweetInFollowerFeedAndFollower response.\n    const followerReference = tweetInFollowerFeedAndFollower[0].value.followerRef;\n    const tweetInFollowerFeed = tweetInFollowerFeedAndFollower[0].value.tweet;\n    // Aca aplica los cambios dentro de los objetos que acabamos de referenciar.\n    if (action == \"like\") {\n        tweetRef.data.info[0].likes += 1;\n        ownerTweet.info[0].likes += 1;\n        tweetInFollowerFeed ? tweetInFollowerFeed.info[0].likes += 1 : \"\";\n    } else if (action == \"retweet\") {\n        tweetRef.data.info[0].retweets += 1;\n        ownerTweet.info[0].retweets += 1;\n        tweetInFollowerFeed ? tweetInFollowerFeed.info[0].retweets += 1 : \"\";\n    } else if (action == \"save\") {\n        tweetRef.data.info[0].saves += 1;\n        ownerTweet.info[0].saves += 1;\n        tweetInFollowerFeed ? tweetInFollowerFeed.info[0].saves += 1 : \"\";\n    } else {\n        tweetRef.data.info[0].comments += 1;\n        ownerTweet.info[0].comments += 1;\n        tweetInFollowerFeed ? tweetInFollowerFeed.info[0].comments += 1 : \"\";\n    }\n    // Aca pushea los datos cambiados previamente para actualizar la informaci贸n de la referencia.\n    /*  me.data.likes.push(tweetRef.data);\r\n\r\n  await me.push(); */ await tweetRef.push();\n    await tweetOwnerRef.push();\n    await (0,_user__WEBPACK_IMPORTED_MODULE_1__.saveAction)(action, tweetRef, token);\n    /* if (followerReference != undefined) {\r\n    await followerReference.push();\r\n  } */ return tweetRef.data.info;\n}\n// Remueve la tweet action dentro de los tweets del tweet owner  , del tweet owener followers feed\n// y de la collection Tweets.\nasync function tweetActionStatusRemover(action, tweetId) {\n    // Aca crea las referencias a el tweet owner,tweet en Tweet collection y\n    // tweet owner followers feed tweet.\n    const tweet = await getTweetById(tweetId);\n    const tweetOwnerRef = await models_user__WEBPACK_IMPORTED_MODULE_3__.User.findById(tweet.data.userId);\n    const tweetInOwner = tweetOwnerRef.data.tweets.find((tweet)=>{\n        if (tweet.id == tweetId) {\n            return tweet;\n        }\n    });\n    const ownerFollowers = tweetOwnerRef.data.followers;\n    const followerAndFeed = await Promise.all(ownerFollowers.map(async (follower)=>{\n        const followerCopy = await models_user__WEBPACK_IMPORTED_MODULE_3__.User.findById(follower);\n        await followerCopy.pull();\n        const tweetFromFollowerFeed = followerCopy.data.feed.find((tweets)=>{\n            if (tweets.id == tweetId) {\n                return tweets;\n            }\n        });\n        return {\n            followerCopy,\n            tweetFromFollowerFeed\n        };\n    }));\n    const follower = followerAndFeed[0].followerCopy;\n    const tweetFromFeed = followerAndFeed[0].tweetFromFollowerFeed;\n    // Aca aplica los cambios dentro de la referencia.\n    if (action == \"like\") {\n        tweet.data.info[0].likes -= 1;\n        tweetFromFeed.info[0].likes -= 1;\n        tweetInOwner.info[0].likes -= 1;\n    } else if (action == \"retweet\") {\n        tweet.data.info[0].retweets -= 1;\n        tweetFromFeed.info[0].retweets -= 1;\n        tweetInOwner.info[0].retweets -= 1;\n    } else if (action == \"save\") {\n        tweet.data.info[0].saves -= 1;\n        tweetFromFeed.info[0].saves -= 1;\n        tweetInOwner.info[0].saves -= 1;\n    } else {\n        tweet.data.info[0].comments -= 1;\n        tweetFromFeed.info[0].comments -= 1;\n        tweetInOwner.info[0].saves -= 1;\n    }\n    // Aca pushea los datos previamente actualizados.\n    await tweet.push();\n    await follower.push();\n    await tweetOwnerRef.push();\n    return tweet.data.info[0];\n}\nasync function addComment(body, { authId  }) {\n    // Aca obtengo la referencia al usuario que hace el request para luego a帽adir su id\n    // en la creaci贸n del comentario y agregar el comentario a sus replies.\n    const me = await (0,_user__WEBPACK_IMPORTED_MODULE_1__.getMe)(authId);\n    let randomId = (0,random_int__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(9999, 100000);\n    const newComment = {\n        comment: body.newComment.comment,\n        userId: body.newComment.userId,\n        ia: new Date(),\n        id: randomId,\n        likes: 0,\n        tweetId: body.newComment.tweetId,\n        by: body.newComment.by,\n        pics: {\n            profilePicture: body.newComment.pics.profilePicture\n        }\n    };\n    // Aca obtiene la referencia del  tweet en la collection Tweet y al usuario due帽o del tweet.\n    const tweet = await models_tweets__WEBPACK_IMPORTED_MODULE_2__.Tweets.findById(body.newComment.tweetId);\n    const tweetOwnerId = tweet.data.userId;\n    const tweetOwner = await models_user__WEBPACK_IMPORTED_MODULE_3__.User.findById(tweetOwnerId);\n    // Obtiene el tweet dentro del tweet owner y le pushea el nuevo comentario.\n    tweetOwner.data.tweets.find((t)=>{\n        if (t.id == body.newComment.tweetId) {\n            t.info[0].comments += 1;\n            t.comments.push(newComment);\n        }\n    });\n    // Obtiene los followers del owner y les agrega el comentario a el tweet dentro de el feed, likes y saves.\n    tweetOwner.data.followers.map(async (f)=>{\n        const userFollower = await models_user__WEBPACK_IMPORTED_MODULE_3__.User.findById(f);\n        userFollower.data.feed.find((t)=>{\n            if (t.id == body.newComment.tweetId) {\n                t.info[0].comments += 1;\n                t.comments.push(newComment);\n            }\n        });\n        userFollower.data.likes.find((t)=>{\n            if (t.id == body.newComment.tweetId) {\n                t.info[0].comments += 1;\n                t.comments.push(newComment);\n            }\n        });\n        userFollower.data.saves.find((t)=>{\n            if (t.id == body.newComment.tweetId) {\n                t.info[0].comments += 1;\n                t.comments.push(newComment);\n            }\n        });\n        await userFollower.push();\n    });\n    me.data.replies.push(newComment);\n    tweet.data.comments.push(newComment);\n    // Without the IF statement it deleted every reply to my own tweets after being set in the\n    // database , I think that was because of the \"re-rendering\" of the document, one of the re-renders\n    //  left the document the way it was before of pushing the new reply.\n    if (me.data.generatedId == tweetOwner.data.generatedId) {\n        tweetOwner.data.feed.find((t)=>{\n            if (t.id == body.newComment.tweetId) {\n                t.info[0].comments += 1;\n                t.comments.push(newComment);\n            }\n        });\n        tweetOwner.data.replies.push(newComment);\n        await tweetOwner.push();\n        await tweet.push();\n        return true;\n    } else {\n        await tweet.push();\n        await me.push();\n        await tweetOwner.push();\n        return true;\n    }\n}\n// Add likes to replies.\nasync function likeComment(tweetId, replyId, { authId  }) {\n    const tweetRef = await models_tweets__WEBPACK_IMPORTED_MODULE_2__.Tweets.findById(tweetId);\n    const userId = tweetRef.data.userId;\n    const user = await models_user__WEBPACK_IMPORTED_MODULE_3__.User.findById(userId);\n    const me = await (0,_user__WEBPACK_IMPORTED_MODULE_1__.getMe)(authId);\n    // Adds  1 like to the comment  inside of  tweet in Tweet collection.\n    tweetRef.data.comments.find((c)=>{\n        if (c.id == replyId) {\n            c.likes += 1;\n        }\n    });\n    // Here it adds  a  like to the reply  inside  the  tweet from the tweet owner in collection User.\n    user.data.tweets.find((t)=>{\n        if (t.id == tweetId) {\n            t.comments.find((c)=>{\n                if (c.id == replyId) {\n                    c.likes += 1;\n                }\n            });\n        }\n    });\n    // Adds a  like to the reply  inside the  feed the likes and saves of the followers.\n    user.data.followers.map(async (f)=>{\n        const follower = await models_user__WEBPACK_IMPORTED_MODULE_3__.User.findById(f);\n        follower.data.saves.find((t)=>{\n            if (t.id == tweetId) {\n                t.comments.map(async (c)=>{\n                    if (c.id == replyId) {\n                        c.likes += 1;\n                    }\n                });\n            }\n        });\n        follower.data.likes.find((t)=>{\n            if (t.id == tweetId) {\n                t.comments.map(async (c)=>{\n                    if (c.id == replyId) {\n                        c.likes += 1;\n                    }\n                });\n            }\n        });\n        follower.data.feed.find((t)=>{\n            if (t.id == tweetId) {\n                t.comments.map(async (c)=>{\n                    if (c.id == replyId) {\n                        c.likes += 1;\n                        await follower.push();\n                    }\n                });\n            }\n        });\n    });\n    // Adds a like to the reply inside of the user liker reply's.\n    me.data.replies.find((c)=>{\n        if (c.id == replyId) {\n            c.likes += 1;\n        }\n    });\n    await tweetRef.push();\n    if (user.data.generatedId == me.data.generatedId) {\n        await me.push();\n    } else {\n        await me.push();\n        await user.push();\n    }\n    return true;\n}\n// Dislike comment.\nasync function dislikeComment(tweetId, replyId, { authId  }) {\n    const tweetRef = await models_tweets__WEBPACK_IMPORTED_MODULE_2__.Tweets.findById(tweetId);\n    const userId = tweetRef.data.userId;\n    const user = await models_user__WEBPACK_IMPORTED_MODULE_3__.User.findById(userId);\n    const me = await (0,_user__WEBPACK_IMPORTED_MODULE_1__.getMe)(authId);\n    // Removes  1 like to the tweet inside of  Tweet collection.\n    tweetRef.data.comments.find((c)=>{\n        if (c.id == replyId) {\n            c.likes -= 1;\n        }\n    });\n    // Here it removes  a  like to the reply  inside  the  tweet from the tweet owener in collection User.\n    user.data.tweets.find((t)=>{\n        if (t.id == tweetId) {\n            t.comments.find((c)=>{\n                if (c.id == replyId) {\n                    c.likes -= 1;\n                }\n            });\n        }\n    });\n    // Removes a  like to the reply  inside the  feed of the followers.\n    // Removes a  like to the reply  inside the  liked tweets of the followers.\n    // Removes a  like to the reply  inside the  saved tweets of the followers.\n    user.data.followers.map(async (f)=>{\n        const follower = await models_user__WEBPACK_IMPORTED_MODULE_3__.User.findById(f);\n        follower.data.likes.find((t)=>{\n            if (t.id == tweetId) {\n                t.comments.map(async (c)=>{\n                    if (c.id == replyId) {\n                        c.likes -= 1;\n                    }\n                });\n            }\n        });\n        follower.data.saves.find((t)=>{\n            if (t.id == tweetId) {\n                t.comments.map(async (c)=>{\n                    if (c.id == replyId) {\n                        c.likes -= 1;\n                    }\n                });\n            }\n        });\n        follower.data.feed.find((t)=>{\n            if (t.id == tweetId) {\n                t.comments.map(async (c)=>{\n                    if (c.id == replyId) {\n                        c.likes -= 1;\n                        await follower.push();\n                    }\n                });\n            }\n        });\n    });\n    // Removes 1 like a el comentario dentro del apartado \"replies\" de la collection User.\n    me.data.replies.find(async (c)=>{\n        if (c.id == replyId) {\n            c.likes -= 1;\n        }\n    });\n    await tweetRef.push();\n    if (user.data.generatedId == me.data.generatedId) {\n        await me.push();\n    } else {\n        await me.push();\n        await user.push();\n    }\n    return true;\n}\nasync function getLatestTweets() {\n    const allTweets = await models_tweets__WEBPACK_IMPORTED_MODULE_2__.Tweets.getAll();\n    const mutateDate = allTweets.map((tweet)=>{\n        const savedDate = tweet.createdAt;\n        const date = new Date(savedDate._seconds * 1000 + savedDate._nanoseconds / 1000000);\n        tweet.createdAt = date;\n        return tweet;\n    });\n    const sortedByDate = [];\n    mutateDate.filter((t, i)=>{\n        if (!date_fns_isAfter__WEBPACK_IMPORTED_MODULE_4___default()(t.createdAt, mutateDate[i++].createdAt)) {\n            sortedByDate.push(t);\n        }\n    });\n    return sortedByDate;\n}\nasync function getTweetsWithMedia() {\n    const allTweets = await models_tweets__WEBPACK_IMPORTED_MODULE_2__.Tweets.getAll();\n    const result = allTweets.filter((t)=>{\n        if (t.img != \"\") {\n            return t;\n        }\n    });\n    return result;\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./controllers/tweets.ts\n");

/***/ }),

/***/ "(api)/./controllers/user.ts":
/*!*****************************!*\
  !*** ./controllers/user.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addFollower\": () => (/* binding */ addFollower),\n/* harmony export */   \"get10RandomsUsers\": () => (/* binding */ get10RandomsUsers),\n/* harmony export */   \"getAllTweetsFromUser\": () => (/* binding */ getAllTweetsFromUser),\n/* harmony export */   \"getAllUsers\": () => (/* binding */ getAllUsers),\n/* harmony export */   \"getMe\": () => (/* binding */ getMe),\n/* harmony export */   \"getMostFollowedUsers\": () => (/* binding */ getMostFollowedUsers),\n/* harmony export */   \"getOthersProfile\": () => (/* binding */ getOthersProfile),\n/* harmony export */   \"getUserFeed\": () => (/* binding */ getUserFeed),\n/* harmony export */   \"getWhoToFollow\": () => (/* binding */ getWhoToFollow),\n/* harmony export */   \"handleUnfollow\": () => (/* binding */ handleUnfollow),\n/* harmony export */   \"saveAction\": () => (/* binding */ saveAction),\n/* harmony export */   \"updateUserProfile\": () => (/* binding */ updateUserProfile)\n/* harmony export */ });\n/* harmony import */ var models_user__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! models/user */ \"(api)/./models/user.ts\");\n/* harmony import */ var models_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! models/auth */ \"(api)/./models/auth.ts\");\n\n\n// If this layer  get to long I may separate it into smaller blocks.\nasync function getMe(token) {\n    const auth = new models_auth__WEBPACK_IMPORTED_MODULE_1__.Auth(token);\n    await auth.pull();\n    const userId = auth.data.userId;\n    const user = new models_user__WEBPACK_IMPORTED_MODULE_0__.User(userId);\n    await user.pull();\n    return user;\n}\nasync function updateUserProfile(updateBody, token) {\n    const user = await getMe(token.authId);\n    if (updateBody.newBody.email) {\n        user.data.email = updateBody.newBody.email;\n    }\n    if (updateBody.newBody.fullname) {\n        user.data.fullname = updateBody.newBody.fullname;\n    }\n    if (updateBody.newBody.description) {\n        user.data.description = updateBody.newBody.description;\n    }\n    if (updateBody.newBody.pics.coverPicture) {\n        user.data.pics.coverPicture = updateBody.newBody.pics.coverPicture;\n    }\n    if (updateBody.newBody.pics.profilePicture) {\n        user.data.pics.profilePicture = updateBody.newBody.pics.profilePicture;\n    }\n    const updated = await user.push();\n    return updated;\n}\n// Adds following to user making the request and a follower to followed user.\nasync function addFollower(followedId, authId) {\n    // First , it gets the user following reference by the authId,then the followed user reference\n    // by followedId param obtained using the url in the frontend,\n    // to access their following and followers properties.\n    const me = await getMe(authId);\n    me.data.following.push(Number(followedId));\n    await me.push();\n    const userFollowed = await models_user__WEBPACK_IMPORTED_MODULE_0__.User.findById(followedId);\n    userFollowed.data.followers.push(Number(me.data.generatedId));\n    await userFollowed.push();\n    return true;\n}\n// Decreases your following count and the unfollowed's followers count\n// Also deletes the unfollowed's tweets from your feed.\nasync function handleUnfollow(unfollowedId, authId) {\n    // Here removes tweets from feed.\n    const me = await getMe(authId);\n    me.data.feed.map(async (tweet, index)=>{\n        if (tweet.userId == unfollowedId) {\n            me.data.feed.splice(index, 1);\n        }\n        await me.push();\n    });\n    // Here  removes the unfollowed user from our following list.\n    const unfollowedIndex = me.data.following.find((ids)=>ids == unfollowedId);\n    const indexOfUserResult = me.data.following.indexOf(unfollowedIndex);\n    if (indexOfUserResult > -1) {\n        me.data.following.splice(indexOfUserResult, 1);\n        await me.push();\n    }\n    // Here removes us from unfollowed's  followers list.\n    const unfollowedUser = await models_user__WEBPACK_IMPORTED_MODULE_0__.User.findById(unfollowedId);\n    await unfollowedUser.pull();\n    const unfollowedUserResult = unfollowedUser.data.followers.find((ids)=>ids == me.data.generatedId);\n    const indexOfMeInUnfollowedFollowers = unfollowedUser.data.followers.indexOf(unfollowedUserResult);\n    if (indexOfMeInUnfollowedFollowers > -1) {\n        unfollowedUser.data.followers.splice(indexOfMeInUnfollowedFollowers, 1);\n        await unfollowedUser.push();\n    }\n    return true;\n}\nasync function getUserFeed(authId) {\n    const user = await getMe(authId);\n    return user.data.feed;\n}\n// Guarda el tweet en nuestra data en el atributo like o save cuando le damos like o save a algun tweet.\nasync function saveAction(action, tweet, token) {\n    const user = await getMe(token);\n    if (action == \"like\") {\n        user.data.likes.find(async (t)=>{\n            if (t.id == tweet.data.id) {\n                // console.log(\"hay otro igual\");\n                return;\n            } else {\n                user.data.likes.push(tweet.data);\n                await user.push();\n            }\n        });\n    }\n    if (action == \"save\") {\n        user.data.saves.find(async (t)=>{\n            if (t.id == tweet.data.id) {\n                return false;\n            } else {\n                user.data.saves.push(tweet.data);\n                await user.push();\n            }\n        });\n    }\n}\nasync function getAllTweetsFromUser(userId) {\n    const user = await models_user__WEBPACK_IMPORTED_MODULE_0__.User.findById(userId);\n    return user.data.tweets;\n}\nasync function getOthersProfile(userId) {\n    const result = await models_user__WEBPACK_IMPORTED_MODULE_0__.User.findById(userId);\n    return result?.data;\n}\n// This function was crashing every time because of the for loop , It was falling\n// into recursion because I was looping until the array length  had 2 elements but It may never have to.\nasync function getWhoToFollow(token) {\n    const me = await getMe(token.authId);\n    const usersList = await models_user__WEBPACK_IMPORTED_MODULE_0__.User.getAll();\n    let arr = [];\n    let newArr = [];\n    // Fix this shit\n    for(let i = 0; i < 2; i++){\n        const randomUser = usersList.map((user)=>{\n            return user;\n        });\n        me.data.following.map((followed)=>{\n            if (followed == randomUser[i].generatedId) {\n                return;\n            } else if (arr[0]?.generatedId == randomUser[i].generatedId) {\n                // Chequea si ya se ha metido un elemento identico al array previamente.\n                return;\n            } else {\n                //  No existe tanto en following como en el array.\n                arr.push(randomUser[i]);\n                return true;\n            }\n        });\n    }\n    /*   for (const user of arr) {\r\n    console.log(user.fullname);\r\n  } */ return arr;\n}\nasync function getAllUsers(query) {\n    const users = await models_user__WEBPACK_IMPORTED_MODULE_0__.User.getAll();\n    const result = users.filter((user)=>{\n        if (user.fullname.includes(query)) {\n            return user;\n        }\n    });\n    return result;\n}\nasync function get10RandomsUsers() {\n    const allUsers = await models_user__WEBPACK_IMPORTED_MODULE_0__.User.getAll();\n    const allRandoms = [];\n    for(let index = 0; index < 10; index++){\n        const random = allUsers[Math.floor(Math.random() * allUsers.length)];\n        allRandoms.push(random);\n    }\n    return allRandoms;\n}\nfunction compareFunction(a, b) {\n    return b.followers.length - a.followers.length;\n}\nasync function getMostFollowedUsers() {\n    // Bring users and compare their followers length to sort them\n    //  use .sort()\n    const users = await models_user__WEBPACK_IMPORTED_MODULE_0__.User.getAll();\n    const sliceData = users.map((user)=>{\n        return {\n            fullname: user.fullname,\n            userId: user.generatedId,\n            followers: user.followers,\n            description: user.description,\n            pics: {\n                profilePicture: user.pics.profilePicture\n            }\n        };\n    });\n    const sortedUsers = sliceData.sort(compareFunction);\n    return sortedUsers;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./controllers/user.ts\n");

/***/ }),

/***/ "(api)/./lib/conn/firestore.ts":
/*!*******************************!*\
  !*** ./lib/conn/firestore.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"firestore\": () => (/* binding */ firestore)\n/* harmony export */ });\n/* harmony import */ var firebase_admin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase-admin */ \"firebase-admin\");\n/* harmony import */ var firebase_admin__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(firebase_admin__WEBPACK_IMPORTED_MODULE_0__);\n\nconst servAcc = JSON.parse(process.env.DB_KEY);\nif ((firebase_admin__WEBPACK_IMPORTED_MODULE_0___default().apps.length) == 0) {\n    firebase_admin__WEBPACK_IMPORTED_MODULE_0___default().initializeApp({\n        credential: firebase_admin__WEBPACK_IMPORTED_MODULE_0___default().credential.cert(servAcc)\n    });\n}\nconst firestore = firebase_admin__WEBPACK_IMPORTED_MODULE_0___default().firestore();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvY29ubi9maXJlc3RvcmUudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW1DO0FBRW5DLE1BQU1DLE9BQU8sR0FBR0MsSUFBSSxDQUFDQyxLQUFLLENBQUNDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxNQUFNLENBQUM7QUFFOUMsSUFBSU4sbUVBQWlCLElBQUksQ0FBQyxFQUFFO0lBQzFCQSxtRUFBbUIsQ0FBQztRQUNsQlUsVUFBVSxFQUFFVixxRUFBcUIsQ0FBQ0MsT0FBTyxDQUFDO0tBQzNDLENBQUMsQ0FBQztDQUNKO0FBRUQsTUFBTVcsU0FBUyxHQUFHWiwrREFBZSxFQUFFO0FBRWQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYWNrZW5kLy4vbGliL2Nvbm4vZmlyZXN0b3JlLnRzP2U4NmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFkbWluIGZyb20gXCJmaXJlYmFzZS1hZG1pblwiO1xyXG5cclxuY29uc3Qgc2VydkFjYyA9IEpTT04ucGFyc2UocHJvY2Vzcy5lbnYuREJfS0VZKTtcclxuXHJcbmlmIChhZG1pbi5hcHBzLmxlbmd0aCA9PSAwKSB7XHJcbiAgYWRtaW4uaW5pdGlhbGl6ZUFwcCh7XHJcbiAgICBjcmVkZW50aWFsOiBhZG1pbi5jcmVkZW50aWFsLmNlcnQoc2VydkFjYyksXHJcbiAgfSk7XHJcbn1cclxuXHJcbmNvbnN0IGZpcmVzdG9yZSA9IGFkbWluLmZpcmVzdG9yZSgpO1xyXG5cclxuZXhwb3J0IHsgZmlyZXN0b3JlIH07XHJcbiJdLCJuYW1lcyI6WyJhZG1pbiIsInNlcnZBY2MiLCJKU09OIiwicGFyc2UiLCJwcm9jZXNzIiwiZW52IiwiREJfS0VZIiwiYXBwcyIsImxlbmd0aCIsImluaXRpYWxpemVBcHAiLCJjcmVkZW50aWFsIiwiY2VydCIsImZpcmVzdG9yZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./lib/conn/firestore.ts\n");

/***/ }),

/***/ "(api)/./lib/jwt/index.ts":
/*!**************************!*\
  !*** ./lib/jwt/index.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createToken\": () => (/* binding */ createToken),\n/* harmony export */   \"decode\": () => (/* binding */ decode)\n/* harmony export */ });\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsonwebtoken */ \"jsonwebtoken\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction createToken(authId) {\n    const token = jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default().sign({\n        authId\n    }, process.env.JWT_KEY);\n    return token;\n}\nfunction decode(token) {\n    try {\n        const validate = jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default().verify(token, process.env.JWT_KEY);\n        return validate;\n    } catch (error) {\n        console.error({\n            error\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvand0L2luZGV4LnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBK0I7QUFFeEIsU0FBU0MsV0FBVyxDQUFDQyxNQUFNLEVBQUU7SUFDbEMsTUFBTUMsS0FBSyxHQUFHSCx3REFBUSxDQUFDO1FBQUVFLE1BQU07S0FBRSxFQUFFRyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsT0FBTyxDQUFDO0lBQ3ZELE9BQU9KLEtBQUssQ0FBQztDQUNkO0FBRU0sU0FBU0ssTUFBTSxDQUFDTCxLQUFLLEVBQUU7SUFDNUIsSUFBSTtRQUNGLE1BQU1NLFFBQVEsR0FBR1QsMERBQVUsQ0FBQ0csS0FBSyxFQUFFRSxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsT0FBTyxDQUFDO1FBQ3ZELE9BQU9FLFFBQVEsQ0FBQztLQUNqQixDQUFDLE9BQU9FLEtBQUssRUFBRTtRQUNkQyxPQUFPLENBQUNELEtBQUssQ0FBQztZQUFFQSxLQUFLO1NBQUUsQ0FBQyxDQUFDO0tBQzFCO0NBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYWNrZW5kLy4vbGliL2p3dC9pbmRleC50cz84ZjQ5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBqd3QgZnJvbSBcImpzb253ZWJ0b2tlblwiO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVRva2VuKGF1dGhJZCkge1xyXG4gIGNvbnN0IHRva2VuID0gand0LnNpZ24oeyBhdXRoSWQgfSwgcHJvY2Vzcy5lbnYuSldUX0tFWSk7XHJcbiAgcmV0dXJuIHRva2VuO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlKHRva2VuKSB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHZhbGlkYXRlID0gand0LnZlcmlmeSh0b2tlbiwgcHJvY2Vzcy5lbnYuSldUX0tFWSk7XHJcbiAgICByZXR1cm4gdmFsaWRhdGU7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoeyBlcnJvciB9KTtcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbImp3dCIsImNyZWF0ZVRva2VuIiwiYXV0aElkIiwidG9rZW4iLCJzaWduIiwicHJvY2VzcyIsImVudiIsIkpXVF9LRVkiLCJkZWNvZGUiLCJ2YWxpZGF0ZSIsInZlcmlmeSIsImVycm9yIiwiY29uc29sZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./lib/jwt/index.ts\n");

/***/ }),

/***/ "(api)/./lib/middlewares/auth.ts":
/*!*********************************!*\
  !*** ./lib/middlewares/auth.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"authMiddleware\": () => (/* binding */ authMiddleware)\n/* harmony export */ });\n/* harmony import */ var lib_jwt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/jwt */ \"(api)/./lib/jwt/index.ts\");\n\nfunction authMiddleware(callback) {\n    return function(req, res) {\n        if (req.headers.authorization) {\n            const token = req.headers.authorization.split(\" \")[1];\n            try {\n                const value = (0,lib_jwt__WEBPACK_IMPORTED_MODULE_0__.decode)(token);\n                callback(req, res, value);\n            } catch (error) {\n                res.send(error);\n            }\n        } else {\n            return res.status(401).send({\n                error: \"Missing token value\"\n            });\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvbWlkZGxld2FyZXMvYXV0aC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUNpQztBQUMxQixTQUFTQyxjQUFjLENBQUNDLFFBQVEsRUFBRTtJQUN2QyxPQUFPLFNBQVVDLEdBQUcsRUFBRUMsR0FBRyxFQUFFO1FBQ2tJLElBQUlELEdBQUcsQ0FBQ0UsT0FBTyxDQUFDQyxhQUFhLEVBQUU7WUFDeEwsTUFBTUMsS0FBSyxHQUFHSixHQUFHLENBQUNFLE9BQU8sQ0FBQ0MsYUFBYSxDQUFDRSxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3JELElBQUk7Z0JBQ0YsTUFBTUMsS0FBSyxHQUFHVCwrQ0FBTSxDQUFDTyxLQUFLLENBQUM7Z0JBQzNCTCxRQUFRLENBQUNDLEdBQUcsRUFBRUMsR0FBRyxFQUFFSyxLQUFLLENBQUMsQ0FBQzthQUMzQixDQUFDLE9BQU9DLEtBQUssRUFBRTtnQkFDZE4sR0FBRyxDQUFDTyxJQUFJLENBQUNELEtBQUssQ0FBQyxDQUFDO2FBQ2pCO1NBQ0YsTUFBTTtZQUNMLE9BQU9OLEdBQUcsQ0FBQ1EsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDRCxJQUFJLENBQUM7Z0JBQUVELEtBQUssRUFBRSxxQkFBcUI7YUFBRSxDQUFDLENBQUM7U0FDL0Q7S0FDRixDQUFDO0NBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYWNrZW5kLy4vbGliL21pZGRsZXdhcmVzL2F1dGgudHM/YTVlOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBsaWdodEZvcm1hdCB9IGZyb20gXCJkYXRlLWZuc1wiO1xyXG5pbXBvcnQgeyBkZWNvZGUgfSBmcm9tIFwibGliL2p3dFwiO1xyXG5leHBvcnQgZnVuY3Rpb24gYXV0aE1pZGRsZXdhcmUoY2FsbGJhY2spIHtcclxuICByZXR1cm4gZnVuY3Rpb24gKHJlcSwgcmVzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXEuaGVhZGVycy5hdXRob3JpemF0aW9uKSB7XHJcbiAgICAgIGNvbnN0IHRva2VuID0gcmVxLmhlYWRlcnMuYXV0aG9yaXphdGlvbi5zcGxpdChcIiBcIilbMV07XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgdmFsdWUgPSBkZWNvZGUodG9rZW4pO1xyXG4gICAgICAgIGNhbGxiYWNrKHJlcSwgcmVzLCB2YWx1ZSk7XHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgcmVzLnNlbmQoZXJyb3IpO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLnNlbmQoeyBlcnJvcjogXCJNaXNzaW5nIHRva2VuIHZhbHVlXCIgfSk7XHJcbiAgICB9XHJcbiAgfTtcclxufVxyXG4iXSwibmFtZXMiOlsiZGVjb2RlIiwiYXV0aE1pZGRsZXdhcmUiLCJjYWxsYmFjayIsInJlcSIsInJlcyIsImhlYWRlcnMiLCJhdXRob3JpemF0aW9uIiwidG9rZW4iLCJzcGxpdCIsInZhbHVlIiwiZXJyb3IiLCJzZW5kIiwic3RhdHVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./lib/middlewares/auth.ts\n");

/***/ }),

/***/ "(api)/./models/auth.ts":
/*!************************!*\
  !*** ./models/auth.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Auth\": () => (/* binding */ Auth)\n/* harmony export */ });\n/* harmony import */ var lib_conn_firestore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/conn/firestore */ \"(api)/./lib/conn/firestore.ts\");\n\nconst collection = lib_conn_firestore__WEBPACK_IMPORTED_MODULE_0__.firestore.collection(\"auths\");\nclass Auth {\n    constructor(id){\n        this.id = id;\n        this.ref = collection.doc(id);\n    }\n    async pull() {\n        const snap = await this.ref.get();\n        const data = snap.data();\n        this.data = data;\n    }\n    async push() {\n        await this.ref.update(this.data);\n    }\n    static trimEmail(email) {\n        return email.trim().toLowerCase();\n    }\n    static async findByEmail(emailParam) {\n        const email = Auth.trimEmail(emailParam);\n        const res = await collection.where(\"email\", \"==\", email).get();\n        if (res.docs.length) {\n            const doc = res.docs[0];\n            const id = doc.id;\n            const auth = new Auth(id);\n            auth.data = doc.data();\n            return auth;\n        }\n    }\n    static async createAuth(data) {\n        const email = Auth.trimEmail(data.email);\n        const newData = {\n            email,\n            code: data.code,\n            expiration: data.expiration,\n            userId: data.userId\n        };\n        const snapshot = await collection.add(newData);\n        const auth = new Auth(snapshot.id);\n        auth.data = newData;\n        return auth;\n    }\n    static async getByEmailAndCode(userEmail, code) {\n        const email = Auth.trimEmail(userEmail);\n        const snapshot = await collection.where(\"email\", \"==\", email).where(\"code\", \"==\", code).get();\n        if (snapshot.docs.length) {\n            const doc = snapshot.docs[0];\n            const auth = new Auth(doc.id);\n            auth.data = doc.data();\n            return auth;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9tb2RlbHMvYXV0aC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUErQztBQUUvQyxNQUFNQyxVQUFVLEdBQUdELG9FQUFvQixDQUFDLE9BQU8sQ0FBQztBQVN6QyxNQUFNRSxJQUFJO0lBSWZDLFlBQVlDLEVBQVUsQ0FBRTtRQUN0QixJQUFJLENBQUNBLEVBQUUsR0FBR0EsRUFBRSxDQUFDO1FBQ2IsSUFBSSxDQUFDQyxHQUFHLEdBQUdKLFVBQVUsQ0FBQ0ssR0FBRyxDQUFDRixFQUFFLENBQUMsQ0FBQztLQUMvQjtJQUNELE1BQU1HLElBQUksR0FBRztRQUNYLE1BQU1DLElBQUksR0FBRyxNQUFNLElBQUksQ0FBQ0gsR0FBRyxDQUFDSSxHQUFHLEVBQUU7UUFDakMsTUFBTUMsSUFBSSxHQUFHRixJQUFJLENBQUNFLElBQUksRUFBRTtRQUN4QixJQUFJLENBQUNBLElBQUksR0FBR0EsSUFBSSxDQUFhO0tBQzlCO0lBQ0QsTUFBTUMsSUFBSSxHQUFHO1FBQ1gsTUFBTSxJQUFJLENBQUNOLEdBQUcsQ0FBQ08sTUFBTSxDQUFDLElBQUksQ0FBQ0YsSUFBSSxDQUFDLENBQUM7S0FDbEM7SUFDRCxPQUFPRyxTQUFTLENBQUNDLEtBQWEsRUFBRTtRQUM5QixPQUFPQSxLQUFLLENBQUNDLElBQUksRUFBRSxDQUFDQyxXQUFXLEVBQUUsQ0FBQztLQUNuQztJQUNELGFBQWFDLFdBQVcsQ0FBQ0MsVUFBa0IsRUFBRTtRQUMzQyxNQUFNSixLQUFLLEdBQUdaLElBQUksQ0FBQ1csU0FBUyxDQUFDSyxVQUFVLENBQUM7UUFDeEMsTUFBTUMsR0FBRyxHQUFHLE1BQU1sQixVQUFVLENBQUNtQixLQUFLLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRU4sS0FBSyxDQUFDLENBQUNMLEdBQUcsRUFBRTtRQUM5RCxJQUFJVSxHQUFHLENBQUNFLElBQUksQ0FBQ0MsTUFBTSxFQUFFO1lBQ25CLE1BQU1oQixHQUFHLEdBQUdhLEdBQUcsQ0FBQ0UsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUN2QixNQUFNakIsRUFBRSxHQUFHRSxHQUFHLENBQUNGLEVBQUU7WUFDakIsTUFBTW1CLElBQUksR0FBRyxJQUFJckIsSUFBSSxDQUFDRSxFQUFFLENBQUM7WUFDekJtQixJQUFJLENBQUNiLElBQUksR0FBR0osR0FBRyxDQUFDSSxJQUFJLEVBQUUsQ0FBYTtZQUNuQyxPQUFPYSxJQUFJLENBQUM7U0FDYjtLQUNGO0lBQ0QsYUFBYUMsVUFBVSxDQUFDZCxJQUFjLEVBQUU7UUFDdEMsTUFBTUksS0FBSyxHQUFHWixJQUFJLENBQUNXLFNBQVMsQ0FBQ0gsSUFBSSxDQUFDSSxLQUFLLENBQUM7UUFFeEMsTUFBTVcsT0FBTyxHQUFHO1lBQ2RYLEtBQUs7WUFDTFksSUFBSSxFQUFFaEIsSUFBSSxDQUFDZ0IsSUFBSTtZQUNmQyxVQUFVLEVBQUVqQixJQUFJLENBQUNpQixVQUFVO1lBQzNCQyxNQUFNLEVBQUVsQixJQUFJLENBQUNrQixNQUFNO1NBQ3BCO1FBQ0QsTUFBTUMsUUFBUSxHQUFHLE1BQU01QixVQUFVLENBQUM2QixHQUFHLENBQUNMLE9BQU8sQ0FBQztRQUM5QyxNQUFNRixJQUFJLEdBQUcsSUFBSXJCLElBQUksQ0FBQzJCLFFBQVEsQ0FBQ3pCLEVBQUUsQ0FBQztRQUNsQ21CLElBQUksQ0FBQ2IsSUFBSSxHQUFHZSxPQUFPLENBQUM7UUFDcEIsT0FBT0YsSUFBSSxDQUFDO0tBQ2I7SUFDRCxhQUFhUSxpQkFBaUIsQ0FBQ0MsU0FBaUIsRUFBRU4sSUFBWSxFQUFFO1FBQzlELE1BQU1aLEtBQUssR0FBR1osSUFBSSxDQUFDVyxTQUFTLENBQUNtQixTQUFTLENBQUM7UUFDdkMsTUFBTUgsUUFBUSxHQUFHLE1BQU01QixVQUFVLENBQzlCbUIsS0FBSyxDQUFDLE9BQU8sRUFBRSxJQUFJLEVBQUVOLEtBQUssQ0FBQyxDQUMzQk0sS0FBSyxDQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUVNLElBQUksQ0FBQyxDQUN6QmpCLEdBQUcsRUFBRTtRQUNSLElBQUlvQixRQUFRLENBQUNSLElBQUksQ0FBQ0MsTUFBTSxFQUFFO1lBQ3hCLE1BQU1oQixHQUFHLEdBQUd1QixRQUFRLENBQUNSLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDNUIsTUFBTUUsSUFBSSxHQUFHLElBQUlyQixJQUFJLENBQUNJLEdBQUcsQ0FBQ0YsRUFBRSxDQUFDO1lBQzdCbUIsSUFBSSxDQUFDYixJQUFJLEdBQUdKLEdBQUcsQ0FBQ0ksSUFBSSxFQUFFLENBQWE7WUFDbkMsT0FBT2EsSUFBSSxDQUFDO1NBQ2I7S0FDRjtDQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFja2VuZC8uL21vZGVscy9hdXRoLnRzPzRkMzIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZmlyZXN0b3JlIH0gZnJvbSBcImxpYi9jb25uL2ZpcmVzdG9yZVwiO1xyXG5cclxuY29uc3QgY29sbGVjdGlvbiA9IGZpcmVzdG9yZS5jb2xsZWN0aW9uKFwiYXV0aHNcIik7XHJcblxyXG50eXBlIEF1dGhEYXRhID0ge1xyXG4gIGVtYWlsOiBzdHJpbmc7XHJcbiAgY29kZTogbnVtYmVyO1xyXG4gIGV4cGlyYXRpb246IERhdGU7XHJcbiAgdXNlcklkOiBzdHJpbmc7XHJcbn07XHJcblxyXG5leHBvcnQgY2xhc3MgQXV0aCB7XHJcbiAgaWQ6IHN0cmluZztcclxuICByZWY6IEZpcmViYXNlRmlyZXN0b3JlLkRvY3VtZW50UmVmZXJlbmNlO1xyXG4gIGRhdGE6IEF1dGhEYXRhO1xyXG4gIGNvbnN0cnVjdG9yKGlkOiBzdHJpbmcpIHtcclxuICAgIHRoaXMuaWQgPSBpZDtcclxuICAgIHRoaXMucmVmID0gY29sbGVjdGlvbi5kb2MoaWQpO1xyXG4gIH1cclxuICBhc3luYyBwdWxsKCkge1xyXG4gICAgY29uc3Qgc25hcCA9IGF3YWl0IHRoaXMucmVmLmdldCgpO1xyXG4gICAgY29uc3QgZGF0YSA9IHNuYXAuZGF0YSgpO1xyXG4gICAgdGhpcy5kYXRhID0gZGF0YSBhcyBBdXRoRGF0YTtcclxuICB9XHJcbiAgYXN5bmMgcHVzaCgpIHtcclxuICAgIGF3YWl0IHRoaXMucmVmLnVwZGF0ZSh0aGlzLmRhdGEpO1xyXG4gIH1cclxuICBzdGF0aWMgdHJpbUVtYWlsKGVtYWlsOiBzdHJpbmcpIHtcclxuICAgIHJldHVybiBlbWFpbC50cmltKCkudG9Mb3dlckNhc2UoKTtcclxuICB9XHJcbiAgc3RhdGljIGFzeW5jIGZpbmRCeUVtYWlsKGVtYWlsUGFyYW06IHN0cmluZykge1xyXG4gICAgY29uc3QgZW1haWwgPSBBdXRoLnRyaW1FbWFpbChlbWFpbFBhcmFtKTtcclxuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGNvbGxlY3Rpb24ud2hlcmUoXCJlbWFpbFwiLCBcIj09XCIsIGVtYWlsKS5nZXQoKTtcclxuICAgIGlmIChyZXMuZG9jcy5sZW5ndGgpIHtcclxuICAgICAgY29uc3QgZG9jID0gcmVzLmRvY3NbMF07XHJcbiAgICAgIGNvbnN0IGlkID0gZG9jLmlkO1xyXG4gICAgICBjb25zdCBhdXRoID0gbmV3IEF1dGgoaWQpO1xyXG4gICAgICBhdXRoLmRhdGEgPSBkb2MuZGF0YSgpIGFzIEF1dGhEYXRhO1xyXG4gICAgICByZXR1cm4gYXV0aDtcclxuICAgIH1cclxuICB9XHJcbiAgc3RhdGljIGFzeW5jIGNyZWF0ZUF1dGgoZGF0YTogQXV0aERhdGEpIHtcclxuICAgIGNvbnN0IGVtYWlsID0gQXV0aC50cmltRW1haWwoZGF0YS5lbWFpbCk7XHJcblxyXG4gICAgY29uc3QgbmV3RGF0YSA9IHtcclxuICAgICAgZW1haWwsXHJcbiAgICAgIGNvZGU6IGRhdGEuY29kZSxcclxuICAgICAgZXhwaXJhdGlvbjogZGF0YS5leHBpcmF0aW9uLFxyXG4gICAgICB1c2VySWQ6IGRhdGEudXNlcklkLFxyXG4gICAgfTtcclxuICAgIGNvbnN0IHNuYXBzaG90ID0gYXdhaXQgY29sbGVjdGlvbi5hZGQobmV3RGF0YSk7XHJcbiAgICBjb25zdCBhdXRoID0gbmV3IEF1dGgoc25hcHNob3QuaWQpO1xyXG4gICAgYXV0aC5kYXRhID0gbmV3RGF0YTtcclxuICAgIHJldHVybiBhdXRoO1xyXG4gIH1cclxuICBzdGF0aWMgYXN5bmMgZ2V0QnlFbWFpbEFuZENvZGUodXNlckVtYWlsOiBzdHJpbmcsIGNvZGU6IG51bWJlcikge1xyXG4gICAgY29uc3QgZW1haWwgPSBBdXRoLnRyaW1FbWFpbCh1c2VyRW1haWwpO1xyXG4gICAgY29uc3Qgc25hcHNob3QgPSBhd2FpdCBjb2xsZWN0aW9uXHJcbiAgICAgIC53aGVyZShcImVtYWlsXCIsIFwiPT1cIiwgZW1haWwpXHJcbiAgICAgIC53aGVyZShcImNvZGVcIiwgXCI9PVwiLCBjb2RlKVxyXG4gICAgICAuZ2V0KCk7XHJcbiAgICBpZiAoc25hcHNob3QuZG9jcy5sZW5ndGgpIHtcclxuICAgICAgY29uc3QgZG9jID0gc25hcHNob3QuZG9jc1swXTtcclxuICAgICAgY29uc3QgYXV0aCA9IG5ldyBBdXRoKGRvYy5pZCk7XHJcbiAgICAgIGF1dGguZGF0YSA9IGRvYy5kYXRhKCkgYXMgQXV0aERhdGE7XHJcbiAgICAgIHJldHVybiBhdXRoO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOlsiZmlyZXN0b3JlIiwiY29sbGVjdGlvbiIsIkF1dGgiLCJjb25zdHJ1Y3RvciIsImlkIiwicmVmIiwiZG9jIiwicHVsbCIsInNuYXAiLCJnZXQiLCJkYXRhIiwicHVzaCIsInVwZGF0ZSIsInRyaW1FbWFpbCIsImVtYWlsIiwidHJpbSIsInRvTG93ZXJDYXNlIiwiZmluZEJ5RW1haWwiLCJlbWFpbFBhcmFtIiwicmVzIiwid2hlcmUiLCJkb2NzIiwibGVuZ3RoIiwiYXV0aCIsImNyZWF0ZUF1dGgiLCJuZXdEYXRhIiwiY29kZSIsImV4cGlyYXRpb24iLCJ1c2VySWQiLCJzbmFwc2hvdCIsImFkZCIsImdldEJ5RW1haWxBbmRDb2RlIiwidXNlckVtYWlsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./models/auth.ts\n");

/***/ }),

/***/ "(api)/./models/tweets.ts":
/*!**************************!*\
  !*** ./models/tweets.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Tweets\": () => (/* binding */ Tweets)\n/* harmony export */ });\n/* harmony import */ var lib_conn_firestore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/conn/firestore */ \"(api)/./lib/conn/firestore.ts\");\n\nconst collection = lib_conn_firestore__WEBPACK_IMPORTED_MODULE_0__.firestore.collection(\"tweets\");\n/* type TweetType = {\r\n  content?: string;\r\n  img?: string;\r\n  userId: string;\r\n  id: number;\r\n  mode: string;\r\n  createdAt: Date;\r\n  userName: string;\r\n  info: {\r\n    likes: number;\r\n    retweets: number;\r\n    saves: number;\r\n    comments: number;\r\n  }[];\r\n}; */ class Tweets {\n    constructor(id){\n        this.id = id;\n        this.ref = collection.doc(id);\n    }\n    async pull() {\n        const snap = await this.ref.get();\n        const data = snap.data();\n        this.data = data;\n    }\n    async push() {\n        await this.ref.update(this.data);\n    }\n    static async createTweet(data) {\n        const snapshot = await collection.add(data);\n        const tweet = new Tweets(snapshot.id);\n        tweet.data = data;\n        return tweet;\n    }\n    static async findById(id) {\n        const numberId = Number(id);\n        const res = await collection.where(\"id\", \"==\", numberId).get();\n        if (res.docs.length) {\n            const doc = res.docs[0];\n            const tweet = new Tweets(doc.id);\n            tweet.data = doc.data();\n            return tweet;\n        }\n    }\n    static async findAllByUserId(id) {\n        const res = await collection.where(\"userId\", \"==\", id).get();\n        if (res.docs.length) {\n            const result = res.docs.map((item, index)=>{\n                const doc = res.docs[index];\n                const tweet = new Tweets(doc.id);\n                tweet.data = doc.data();\n                return tweet.data;\n            });\n            return result;\n        }\n    }\n    static async getAll() {\n        const coll = await collection.get();\n        const docs = coll.docs;\n        const tweets = docs.map((d)=>{\n            return d.data();\n        });\n        return tweets;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9tb2RlbHMvdHdlZXRzLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQytDO0FBRS9DLE1BQU1DLFVBQVUsR0FBR0Qsb0VBQW9CLENBQUMsUUFBUSxDQUFDO0FBRWpEO0lBb0JFRyxZQUFZQyxFQUFVLENBQUU7UUFDdEIsSUFBSSxDQUFDQSxFQUFFO1FBQ1AsSUFBSSxDQUFDQyxHQUFHO0tBQ1Q7SUFDRCxNQUFNRSxJQUFJO1FBQ1IsTUFBTUMsSUFBSTtRQUNWLE1BQU1FLElBQUk7UUFDVjtLQUNEO0lBQ0QsTUFBTUMsSUFBSSxHQUFHO1FBQ1gsTUFBTSxJQUFJLENBQUNOO0tBQ1o7SUFDRDtNQUNFLENBQU1TLFFBQVEsR0FBRztRQUNqQixNQUFNRSxLQUFLO1FBQ1hBLEtBQUssQ0FBQ04sSUFBSSxHQUFHQTtRQUNiLE9BQU9NLEtBQUssQ0FBQztLQUNkO0lBQ0QsYUFBYUM7UUFDWCxNQUFNQyxRQUFRLEdBQUdDLE1BQU0sQ0FBQ2YsRUFBRSxDQUFDO1FBQzNCLE1BQU1nQixHQUFHLEdBQUcsTUFBTW5CO1FBRWxCLElBQUltQixHQUFHLENBQUNFLElBQUksQ0FBQ0M7O1lBRVgsTUFBTVA7WUFDTkEsS0FBSyxDQUFDTixJQUFJLEdBQUdKLEdBQUcsQ0FBQ0ksSUFBSSxFQUFFLENBQWM7O1NBRXRDO0tBQ0Y7SUFDRCxhQUFhYyxlQUFlLENBQUNwQixFQUFVLEVBQUU7UUFDdkMsTUFBTWdCLEdBQUcsR0FBRyxNQUFNbkI7UUFDbEIsSUFBSW1CLEdBQUcsQ0FBQ0UsSUFBSSxDQUFDQzs7Z0JBRVQsTUFBTWpCLEdBQUcsR0FBR2MsR0FBRztnQkFDZixNQUFNSixLQUFLLEdBQUcsSUFBSWQ7Z0JBQ2xCYyxLQUFLLENBQUNOLElBQUksR0FBR0osR0FBRyxDQUFDSSxJQUFJLEVBQUUsQ0FBYztnQkFDckMsT0FBT00sS0FBSyxDQUFDTjthQUNkLENBQUM7WUFDRixPQUFPZSxNQUFNLENBQUM7U0FDZjtLQUNGO0lBQ0Q7O1FBRUUsTUFBTUgsSUFBSSxHQUFHUSxJQUFJLENBQUNSLElBQUk7UUFDdEIsTUFBTVMsTUFBTSxHQUFHVCxJQUFJLENBQUNJLEdBQUcsQ0FBQyxDQUFDTSxDQUFDLEdBQUs7WUFDN0IsT0FBT0EsQ0FBQyxDQUFDdEIsSUFBSSxFQUFFLENBQUM7U0FDakIsQ0FBQztRQUNGLE9BQU9xQixNQUFNLENBQUM7S0FDZjtDQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFja2VuZC8uL21vZGVscy90d2VldHMudHM/MDBjMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUd2VldFR5cGUgfSBmcm9tIFwiY3VzdG9tXCI7XHJcbmltcG9ydCB7IGZpcmVzdG9yZSB9IGZyb20gXCJsaWIvY29ubi9maXJlc3RvcmVcIjtcclxuXHJcbmNvbnN0IGNvbGxlY3Rpb24gPSBmaXJlc3RvcmUuY29sbGVjdGlvbihcInR3ZWV0c1wiKTtcclxuXHJcbi8qIHR5cGUgVHdlZXRUeXBlID0ge1xyXG4gIGNvbnRlbnQ/OiBzdHJpbmc7XHJcbiAgaW1nPzogc3RyaW5nO1xyXG4gIHVzZXJJZDogc3RyaW5nO1xyXG4gIGlkOiBudW1iZXI7XHJcbiAgbW9kZTogc3RyaW5nO1xyXG4gIGNyZWF0ZWRBdDogRGF0ZTtcclxuICB1c2VyTmFtZTogc3RyaW5nO1xyXG4gIGluZm86IHtcclxuICAgIGxpa2VzOiBudW1iZXI7XHJcbiAgICByZXR3ZWV0czogbnVtYmVyO1xyXG4gICAgc2F2ZXM6IG51bWJlcjtcclxuICAgIGNvbW1lbnRzOiBudW1iZXI7XHJcbiAgfVtdO1xyXG59OyAqL1xyXG5cclxuZXhwb3J0IGNsYXNzIFR3ZWV0cyB7XHJcbiAgaWQ6IHN0cmluZztcclxuICByZWY6IEZpcmViYXNlRmlyZXN0b3JlLkRvY3VtZW50UmVmZXJlbmNlO1xyXG4gIGRhdGE6IFR3ZWV0VHlwZTtcclxuICBjb25zdHJ1Y3RvcihpZDogc3RyaW5nKSB7XHJcbiAgICB0aGlzLmlkID0gaWQ7XHJcbiAgICB0aGlzLnJlZiA9IGNvbGxlY3Rpb24uZG9jKGlkKTtcclxuICB9XHJcbiAgYXN5bmMgcHVsbCgpIHtcclxuICAgIGNvbnN0IHNuYXAgPSBhd2FpdCB0aGlzLnJlZi5nZXQoKTtcclxuICAgIGNvbnN0IGRhdGEgPSBzbmFwLmRhdGEoKTtcclxuICAgIHRoaXMuZGF0YSA9IGRhdGEgYXMgVHdlZXRUeXBlO1xyXG4gIH1cclxuICBhc3luYyBwdXNoKCkge1xyXG4gICAgYXdhaXQgdGhpcy5yZWYudXBkYXRlKHRoaXMuZGF0YSk7XHJcbiAgfVxyXG4gIHN0YXRpYyBhc3luYyBjcmVhdGVUd2VldChkYXRhOiBUd2VldFR5cGUpIHtcclxuICAgIGNvbnN0IHNuYXBzaG90ID0gYXdhaXQgY29sbGVjdGlvbi5hZGQoZGF0YSk7XHJcbiAgICBjb25zdCB0d2VldCA9IG5ldyBUd2VldHMoc25hcHNob3QuaWQpO1xyXG4gICAgdHdlZXQuZGF0YSA9IGRhdGE7XHJcbiAgICByZXR1cm4gdHdlZXQ7XHJcbiAgfVxyXG4gIHN0YXRpYyBhc3luYyBmaW5kQnlJZChpZDogbnVtYmVyKSB7XHJcbiAgICBjb25zdCBudW1iZXJJZCA9IE51bWJlcihpZCk7XHJcbiAgICBjb25zdCByZXMgPSBhd2FpdCBjb2xsZWN0aW9uLndoZXJlKFwiaWRcIiwgXCI9PVwiLCBudW1iZXJJZCkuZ2V0KCk7XHJcblxyXG4gICAgaWYgKHJlcy5kb2NzLmxlbmd0aCkge1xyXG4gICAgICBjb25zdCBkb2MgPSByZXMuZG9jc1swXTtcclxuICAgICAgY29uc3QgdHdlZXQgPSBuZXcgVHdlZXRzKGRvYy5pZCk7XHJcbiAgICAgIHR3ZWV0LmRhdGEgPSBkb2MuZGF0YSgpIGFzIFR3ZWV0VHlwZTtcclxuICAgICAgcmV0dXJuIHR3ZWV0O1xyXG4gICAgfVxyXG4gIH1cclxuICBzdGF0aWMgYXN5bmMgZmluZEFsbEJ5VXNlcklkKGlkOiBzdHJpbmcpIHtcclxuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGNvbGxlY3Rpb24ud2hlcmUoXCJ1c2VySWRcIiwgXCI9PVwiLCBpZCkuZ2V0KCk7XHJcbiAgICBpZiAocmVzLmRvY3MubGVuZ3RoKSB7XHJcbiAgICAgIGNvbnN0IHJlc3VsdCA9IHJlcy5kb2NzLm1hcCgoaXRlbSwgaW5kZXgpID0+IHtcclxuICAgICAgICBjb25zdCBkb2MgPSByZXMuZG9jc1tpbmRleF07XHJcbiAgICAgICAgY29uc3QgdHdlZXQgPSBuZXcgVHdlZXRzKGRvYy5pZCk7XHJcbiAgICAgICAgdHdlZXQuZGF0YSA9IGRvYy5kYXRhKCkgYXMgVHdlZXRUeXBlO1xyXG4gICAgICAgIHJldHVybiB0d2VldC5kYXRhO1xyXG4gICAgICB9KTtcclxuICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgIH1cclxuICB9XHJcbiAgc3RhdGljIGFzeW5jIGdldEFsbCgpIHtcclxuICAgIGNvbnN0IGNvbGwgPSBhd2FpdCBjb2xsZWN0aW9uLmdldCgpO1xyXG4gICAgY29uc3QgZG9jcyA9IGNvbGwuZG9jcztcclxuICAgIGNvbnN0IHR3ZWV0cyA9IGRvY3MubWFwKChkKSA9PiB7XHJcbiAgICAgIHJldHVybiBkLmRhdGEoKTtcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIHR3ZWV0cztcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbImZpcmVzdG9yZSIsImNvbGxlY3Rpb24iLCJUd2VldHMiLCJjb25zdHJ1Y3RvciIsImlkIiwicmVmIiwiZG9jIiwicHVsbCIsInNuYXAiLCJnZXQiLCJkYXRhIiwicHVzaCIsInVwZGF0ZSIsImNyZWF0ZVR3ZWV0Iiwic25hcHNob3QiLCJhZGQiLCJ0d2VldCIsImZpbmRCeUlkIiwibnVtYmVySWQiLCJOdW1iZXIiLCJyZXMiLCJ3aGVyZSIsImRvY3MiLCJsZW5ndGgiLCJmaW5kQWxsQnlVc2VySWQiLCJyZXN1bHQiLCJtYXAiLCJpdGVtIiwiaW5kZXgiLCJnZXRBbGwiLCJjb2xsIiwidHdlZXRzIiwiZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./models/tweets.ts\n");

/***/ }),

/***/ "(api)/./models/user.ts":
/*!************************!*\
  !*** ./models/user.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"User\": () => (/* binding */ User)\n/* harmony export */ });\n/* harmony import */ var lib_conn_firestore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/conn/firestore */ \"(api)/./lib/conn/firestore.ts\");\n\nconst collection = lib_conn_firestore__WEBPACK_IMPORTED_MODULE_0__.firestore.collection(\"users\");\nclass User {\n    constructor(id){\n        this.id = id;\n        this.ref = collection.doc(id);\n    }\n    async push() {\n        await this.ref.update(this.data);\n    }\n    async pull() {\n        const snap = await this.ref.get();\n        const data = snap.data();\n        this.data = data;\n    }\n    static async createUser(data) {\n        const email = data.email.trim().toLowerCase();\n        const newData = {\n            email,\n            fullname: data.fullname,\n            pics: {\n                profilePicture: data.pics.profilePicture,\n                coverPicture: data.pics.coverPicture\n            },\n            description: data.description,\n            tweets: data.tweets || [\n                {}\n            ],\n            followers: [],\n            following: [],\n            likes: data.likes || [\n                {}\n            ],\n            saves: data.saves || [\n                {}\n            ],\n            feed: data.feed || [\n                {}\n            ],\n            generatedId: data.generatedId,\n            replies: data.replies || [\n                {}\n            ]\n        };\n        const snapshot = await collection.add(newData);\n        const user = new User(snapshot.id);\n        user.data = newData;\n        user.data.tweets.pop();\n        await user.push();\n        return user;\n    }\n    static async findById(userId) {\n        const snapshot = await collection.where(\"generatedId\", \"==\", Number(userId)).get();\n        if (snapshot.docs.length) {\n            {\n                const doc = snapshot.docs[0];\n                const user = new User(doc.id);\n                user.data = doc.data();\n                return user;\n            }\n        }\n    }\n    static async getAll() {\n        const usersSnapshot = await collection.get();\n        const users = usersSnapshot.docs.map((d)=>{\n            const data = d.data();\n            return data;\n        });\n        return users;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFDRixFQUFFLENBQUM7Z0JBQzdCNkIsSUFBSSxDQUFDeEIsSUFBSSxHQUFHSCxHQUFHLENBQUNHLElBQUksRUFBRSxDQUFhO2dCQUNuQyxPQUFPd0IsSUFBSSxDQUFDO2FBQ2I7U0FDRjtLQUNGO0lBQ0QsYUFBYVEsTUFBTSxHQUFHO1FBQ3BCLE1BQU1DLGFBQWEsR0FBRyxNQUFNekMsVUFBVSxDQUFDVyxHQUFHLEVBQUU7UUFDNUMsTUFBTStCLEtBQUssR0FBR0QsYUFBYSxDQUFDSCxJQUFJLENBQUNLLEdBQUcsQ0FBQyxDQUFDQyxDQUFDLEdBQUs7WUFDMUMsTUFBTXBDLElBQUksR0FBR29DLENBQUMsQ0FBQ3BDLElBQUksRUFBRTtZQUNyQixPQUFPQSxJQUFJLENBQUM7U0FDYixDQUFDO1FBQ0YsT0FBT2tDLEtBQUssQ0FBQztLQUNkO0NBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYWNrZW5kLy4vbW9kZWxzL3VzZXIudHM/NzAwYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBVc2VyRGF0YSB9IGZyb20gXCJjdXN0b21cIjtcclxuaW1wb3J0IHsgZmlyZXN0b3JlIH0gZnJvbSBcImxpYi9jb25uL2ZpcmVzdG9yZVwiO1xyXG5cclxuY29uc3QgY29sbGVjdGlvbiA9IGZpcmVzdG9yZS5jb2xsZWN0aW9uKFwidXNlcnNcIik7XHJcblxyXG5leHBvcnQgY2xhc3MgVXNlciB7XHJcbiAgcmVmOiBGaXJlYmFzZUZpcmVzdG9yZS5Eb2N1bWVudFJlZmVyZW5jZTtcclxuICBkYXRhOiBVc2VyRGF0YTtcclxuICBpZDogc3RyaW5nO1xyXG4gIGNvbnN0cnVjdG9yKGlkOiBzdHJpbmcpIHtcclxuICAgIHRoaXMuaWQgPSBpZDtcclxuICAgIHRoaXMucmVmID0gY29sbGVjdGlvbi5kb2MoaWQpO1xyXG4gIH1cclxuICBhc3luYyBwdXNoKCkge1xyXG4gICAgYXdhaXQgdGhpcy5yZWYudXBkYXRlKHRoaXMuZGF0YSk7XHJcbiAgfVxyXG4gIGFzeW5jIHB1bGwoKSB7XHJcbiAgICBjb25zdCBzbmFwID0gYXdhaXQgdGhpcy5yZWYuZ2V0KCk7XHJcbiAgICBjb25zdCBkYXRhID0gc25hcC5kYXRhKCk7XHJcbiAgICB0aGlzLmRhdGEgPSBkYXRhIGFzIFVzZXJEYXRhO1xyXG4gIH1cclxuICBzdGF0aWMgYXN5bmMgY3JlYXRlVXNlcihkYXRhOiBVc2VyRGF0YSkge1xyXG4gICAgY29uc3QgZW1haWwgPSBkYXRhLmVtYWlsLnRyaW0oKS50b0xvd2VyQ2FzZSgpO1xyXG4gICAgY29uc3QgbmV3RGF0YSA9IHtcclxuICAgICAgZW1haWwsXHJcbiAgICAgIGZ1bGxuYW1lOiBkYXRhLmZ1bGxuYW1lLFxyXG4gICAgICBwaWNzOiB7XHJcbiAgICAgICAgcHJvZmlsZVBpY3R1cmU6IGRhdGEucGljcy5wcm9maWxlUGljdHVyZSxcclxuICAgICAgICBjb3ZlclBpY3R1cmU6IGRhdGEucGljcy5jb3ZlclBpY3R1cmUsXHJcbiAgICAgIH0sXHJcbiAgICAgIGRlc2NyaXB0aW9uOiBkYXRhLmRlc2NyaXB0aW9uLFxyXG4gICAgICB0d2VldHM6IGRhdGEudHdlZXRzIHx8IFt7fV0sXHJcbiAgICAgIGZvbGxvd2VyczogW10sXHJcbiAgICAgIGZvbGxvd2luZzogW10sXHJcbiAgICAgIGxpa2VzOiBkYXRhLmxpa2VzIHx8IFt7fV0sXHJcbiAgICAgIHNhdmVzOiBkYXRhLnNhdmVzIHx8IFt7fV0sXHJcbiAgICAgIGZlZWQ6IGRhdGEuZmVlZCB8fCBbe31dLFxyXG4gICAgICBnZW5lcmF0ZWRJZDogZGF0YS5nZW5lcmF0ZWRJZCxcclxuICAgICAgcmVwbGllczogZGF0YS5yZXBsaWVzIHx8IFt7fV0sXHJcbiAgICB9O1xyXG4gICAgY29uc3Qgc25hcHNob3QgPSBhd2FpdCBjb2xsZWN0aW9uLmFkZChuZXdEYXRhKTtcclxuICAgIGNvbnN0IHVzZXIgPSBuZXcgVXNlcihzbmFwc2hvdC5pZCk7XHJcbiAgICB1c2VyLmRhdGEgPSBuZXdEYXRhO1xyXG4gICAgdXNlci5kYXRhLnR3ZWV0cy5wb3AoKTtcclxuICAgIGF3YWl0IHVzZXIucHVzaCgpO1xyXG4gICAgcmV0dXJuIHVzZXI7XHJcbiAgfVxyXG4gIHN0YXRpYyBhc3luYyBmaW5kQnlJZCh1c2VySWQ6IG51bWJlcikge1xyXG4gICAgY29uc3Qgc25hcHNob3QgPSBhd2FpdCBjb2xsZWN0aW9uXHJcbiAgICAgIC53aGVyZShcImdlbmVyYXRlZElkXCIsIFwiPT1cIiwgTnVtYmVyKHVzZXJJZCkpXHJcbiAgICAgIC5nZXQoKTtcclxuICAgIGlmIChzbmFwc2hvdC5kb2NzLmxlbmd0aCkge1xyXG4gICAgICB7XHJcbiAgICAgICAgY29uc3QgZG9jID0gc25hcHNob3QuZG9jc1swXTtcclxuICAgICAgICBjb25zdCB1c2VyID0gbmV3IFVzZXIoZG9jLmlkKTtcclxuICAgICAgICB1c2VyLmRhdGEgPSBkb2MuZGF0YSgpIGFzIFVzZXJEYXRhO1xyXG4gICAgICAgIHJldHVybiB1c2VyO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIHN0YXRpYyBhc3luYyBnZXRBbGwoKSB7XHJcbiAgICBjb25zdCB1c2Vyc1NuYXBzaG90ID0gYXdhaXQgY29sbGVjdGlvbi5nZXQoKTtcclxuICAgIGNvbnN0IHVzZXJzID0gdXNlcnNTbmFwc2hvdC5kb2NzLm1hcCgoZCkgPT4ge1xyXG4gICAgICBjb25zdCBkYXRhID0gZC5kYXRhKCk7XHJcbiAgICAgIHJldHVybiBkYXRhO1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gdXNlcnM7XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6WyJmaXJlc3RvcmUiLCJjb2xsZWN0aW9uIiwiVXNlciIsImNvbnN0cnVjdG9yIiwiaWQiLCJyZWYiLCJkb2MiLCJwdXNoIiwidXBkYXRlIiwiZGF0YSIsInB1bGwiLCJzbmFwIiwiZ2V0IiwiY3JlYXRlVXNlciIsImVtYWlsIiwidHJpbSIsInRvTG93ZXJDYXNlIiwibmV3RGF0YSIsImZ1bGxuYW1lIiwicGljcyIsInByb2ZpbGVQaWN0dXJlIiwiY292ZXJQaWN0dXJlIiwiZGVzY3JpcHRpb24iLCJ0d2VldHMiLCJmb2xsb3dlcnMiLCJmb2xsb3dpbmciLCJsaWtlcyIsInNhdmVzIiwiZmVlZCIsImdlbmVyYXRlZElkIiwicmVwbGllcyIsInNuYXBzaG90IiwiYWRkIiwidXNlciIsInBvcCIsImZpbmRCeUlkIiwidXNlcklkIiwid2hlcmUiLCJOdW1iZXIiLCJkb2NzIiwibGVuZ3RoIiwiZ2V0QWxsIiwidXNlcnNTbmFwc2hvdCIsInVzZXJzIiwibWFwIiwiZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./models/user.ts\n");

/***/ }),

/***/ "(api)/./pages/api/tweet/index.ts":
/*!**********************************!*\
  !*** ./pages/api/tweet/index.ts ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var micro_method_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micro-method-router */ \"micro-method-router\");\n/* harmony import */ var micro_method_router__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(micro_method_router__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lib_middlewares_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/middlewares/auth */ \"(api)/./lib/middlewares/auth.ts\");\n/* harmony import */ var controllers_tweets__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! controllers/tweets */ \"(api)/./controllers/tweets.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([controllers_tweets__WEBPACK_IMPORTED_MODULE_2__]);\ncontrollers_tweets__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\nasync function handlePostTweet(req, res, token) {\n    const created = await (0,controllers_tweets__WEBPACK_IMPORTED_MODULE_2__.createTweet)(req.body, token);\n    res.send({\n        created\n    });\n}\nasync function handleGetTweet(req, res) {\n    const tweet = await (0,controllers_tweets__WEBPACK_IMPORTED_MODULE_2__.getTweetById)(req.query.id);\n    res.send({\n        tweet: tweet.data\n    });\n}\nasync function handleDeleteTweet(req, res, token) {\n    const { tweetId  } = req.body;\n    const result = await (0,controllers_tweets__WEBPACK_IMPORTED_MODULE_2__.deleteTweetById)(tweetId);\n    res.send(result);\n}\nasync function handlePatchTweet(req, res, token) {\n    const { tweetId , newData  } = req.body;\n    const tweetIdToNumber = Number(tweetId);\n    const result = await (0,controllers_tweets__WEBPACK_IMPORTED_MODULE_2__.updateOneTweet)(tweetIdToNumber, newData);\n    res.send(result);\n}\nasync function handleOptions(req, res) {\n    res.send({\n        status: \"ok\"\n    });\n}\nconst handler = micro_method_router__WEBPACK_IMPORTED_MODULE_0___default()({\n    post: (0,lib_middlewares_auth__WEBPACK_IMPORTED_MODULE_1__.authMiddleware)(handlePostTweet),\n    get: handleGetTweet,\n    delete: (0,lib_middlewares_auth__WEBPACK_IMPORTED_MODULE_1__.authMiddleware)(handleDeleteTweet),\n    patch: (0,lib_middlewares_auth__WEBPACK_IMPORTED_MODULE_1__.authMiddleware)(handlePatchTweet),\n    options: handleOptions\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (handler);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvdHdlZXQvaW5kZXgudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFDMEM7QUFDWTtBQU0xQjtBQUU1QixlQUFlTSxlQUFlLENBQzVCQyxHQUFtQixFQUNuQkMsR0FBb0IsRUFDcEJDLEtBQUssRUFDTDtJQUNBLE1BQU1DLE9BQU8sR0FBRyxNQUFNUiwrREFBVyxDQUFDSyxHQUFHLENBQUNJLElBQUksRUFBRUYsS0FBSyxDQUFDO0lBQ2xERCxHQUFHLENBQUNJLElBQUksQ0FBQztRQUFFRixPQUFPO0tBQUUsQ0FBQyxDQUFDO0NBQ3ZCO0FBQ0QsZUFBZUcsY0FBYyxDQUFDTixHQUFtQixFQUFFQyxHQUFvQixFQUFFO0lBQ3ZFLE1BQU1NLEtBQUssR0FBRyxNQUFNWCxnRUFBWSxDQUFDSSxHQUFHLENBQUNRLEtBQUssQ0FBQ0MsRUFBRSxDQUFRO0lBQ3JEUixHQUFHLENBQUNJLElBQUksQ0FBQztRQUFFRSxLQUFLLEVBQUVBLEtBQUssQ0FBQ0csSUFBSTtLQUFFLENBQUMsQ0FBQztDQUNqQztBQUVELGVBQWVDLGlCQUFpQixDQUM5QlgsR0FBbUIsRUFDbkJDLEdBQW9CLEVBQ3BCQyxLQUFLLEVBQ0w7SUFDQSxNQUFNLEVBQUVVLE9BQU8sR0FBRSxHQUFHWixHQUFHLENBQUNJLElBQUk7SUFDNUIsTUFBTVMsTUFBTSxHQUFHLE1BQU1oQixtRUFBZSxDQUFDZSxPQUFPLENBQUM7SUFDN0NYLEdBQUcsQ0FBQ0ksSUFBSSxDQUFDUSxNQUFNLENBQUMsQ0FBQztDQUNsQjtBQUVELGVBQWVDLGdCQUFnQixDQUM3QmQsR0FBbUIsRUFDbkJDLEdBQW9CLEVBQ3BCQyxLQUFLLEVBQ0w7SUFDQSxNQUFNLEVBQUVVLE9BQU8sR0FBRUcsT0FBTyxHQUFFLEdBQUdmLEdBQUcsQ0FBQ0ksSUFBSTtJQUNyQyxNQUFNWSxlQUFlLEdBQUdDLE1BQU0sQ0FBQ0wsT0FBTyxDQUFDO0lBQ3ZDLE1BQU1DLE1BQU0sR0FBRyxNQUFNZixrRUFBYyxDQUFDa0IsZUFBZSxFQUFFRCxPQUFPLENBQUM7SUFDN0RkLEdBQUcsQ0FBQ0ksSUFBSSxDQUFDUSxNQUFNLENBQUMsQ0FBQztDQUNsQjtBQUNELGVBQWVLLGFBQWEsQ0FBQ2xCLEdBQUcsRUFBRUMsR0FBRyxFQUFFO0lBQ3JDQSxHQUFHLENBQUNJLElBQUksQ0FBQztRQUFFYyxNQUFNLEVBQUUsSUFBSTtLQUFFLENBQUMsQ0FBQztDQUM1QjtBQUVELE1BQU1DLE9BQU8sR0FBRzNCLDBEQUFPLENBQUM7SUFDdEI0QixJQUFJLEVBQUUzQixvRUFBYyxDQUFDSyxlQUFlLENBQUM7SUFDckN1QixHQUFHLEVBQUVoQixjQUFjO0lBQ25CaUIsTUFBTSxFQUFFN0Isb0VBQWMsQ0FBQ2lCLGlCQUFpQixDQUFDO0lBQ3pDYSxLQUFLLEVBQUU5QixvRUFBYyxDQUFDb0IsZ0JBQWdCLENBQUM7SUFDdkNXLE9BQU8sRUFBRVAsYUFBYTtDQUN2QixDQUFDO0FBRUYsaUVBQWVFLE9BQU8sRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2JhY2tlbmQvLi9wYWdlcy9hcGkvdHdlZXQvaW5kZXgudHM/Y2Y1ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IE5leHRBcGlSZXF1ZXN0LCBOZXh0QXBpUmVzcG9uc2UgfSBmcm9tIFwibmV4dFwiO1xyXG5pbXBvcnQgbWV0aG9kcyBmcm9tIFwibWljcm8tbWV0aG9kLXJvdXRlclwiO1xyXG5pbXBvcnQgeyBhdXRoTWlkZGxld2FyZSB9IGZyb20gXCJsaWIvbWlkZGxld2FyZXMvYXV0aFwiO1xyXG5pbXBvcnQge1xyXG4gIGNyZWF0ZVR3ZWV0LFxyXG4gIGdldFR3ZWV0QnlJZCxcclxuICBkZWxldGVUd2VldEJ5SWQsXHJcbiAgdXBkYXRlT25lVHdlZXQsXHJcbn0gZnJvbSBcImNvbnRyb2xsZXJzL3R3ZWV0c1wiO1xyXG5cclxuYXN5bmMgZnVuY3Rpb24gaGFuZGxlUG9zdFR3ZWV0KFxyXG4gIHJlcTogTmV4dEFwaVJlcXVlc3QsXHJcbiAgcmVzOiBOZXh0QXBpUmVzcG9uc2UsXHJcbiAgdG9rZW5cclxuKSB7XHJcbiAgY29uc3QgY3JlYXRlZCA9IGF3YWl0IGNyZWF0ZVR3ZWV0KHJlcS5ib2R5LCB0b2tlbik7XHJcbiAgcmVzLnNlbmQoeyBjcmVhdGVkIH0pO1xyXG59XHJcbmFzeW5jIGZ1bmN0aW9uIGhhbmRsZUdldFR3ZWV0KHJlcTogTmV4dEFwaVJlcXVlc3QsIHJlczogTmV4dEFwaVJlc3BvbnNlKSB7XHJcbiAgY29uc3QgdHdlZXQgPSBhd2FpdCBnZXRUd2VldEJ5SWQocmVxLnF1ZXJ5LmlkIGFzIGFueSk7XHJcbiAgcmVzLnNlbmQoeyB0d2VldDogdHdlZXQuZGF0YSB9KTtcclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gaGFuZGxlRGVsZXRlVHdlZXQoXHJcbiAgcmVxOiBOZXh0QXBpUmVxdWVzdCxcclxuICByZXM6IE5leHRBcGlSZXNwb25zZSxcclxuICB0b2tlblxyXG4pIHtcclxuICBjb25zdCB7IHR3ZWV0SWQgfSA9IHJlcS5ib2R5O1xyXG4gIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGRlbGV0ZVR3ZWV0QnlJZCh0d2VldElkKTtcclxuICByZXMuc2VuZChyZXN1bHQpO1xyXG59XHJcblxyXG5hc3luYyBmdW5jdGlvbiBoYW5kbGVQYXRjaFR3ZWV0KFxyXG4gIHJlcTogTmV4dEFwaVJlcXVlc3QsXHJcbiAgcmVzOiBOZXh0QXBpUmVzcG9uc2UsXHJcbiAgdG9rZW5cclxuKSB7XHJcbiAgY29uc3QgeyB0d2VldElkLCBuZXdEYXRhIH0gPSByZXEuYm9keTtcclxuICBjb25zdCB0d2VldElkVG9OdW1iZXIgPSBOdW1iZXIodHdlZXRJZCk7XHJcbiAgY29uc3QgcmVzdWx0ID0gYXdhaXQgdXBkYXRlT25lVHdlZXQodHdlZXRJZFRvTnVtYmVyLCBuZXdEYXRhKTtcclxuICByZXMuc2VuZChyZXN1bHQpO1xyXG59XHJcbmFzeW5jIGZ1bmN0aW9uIGhhbmRsZU9wdGlvbnMocmVxLCByZXMpIHtcclxuICByZXMuc2VuZCh7IHN0YXR1czogXCJva1wiIH0pO1xyXG59XHJcblxyXG5jb25zdCBoYW5kbGVyID0gbWV0aG9kcyh7XHJcbiAgcG9zdDogYXV0aE1pZGRsZXdhcmUoaGFuZGxlUG9zdFR3ZWV0KSxcclxuICBnZXQ6IGhhbmRsZUdldFR3ZWV0LFxyXG4gIGRlbGV0ZTogYXV0aE1pZGRsZXdhcmUoaGFuZGxlRGVsZXRlVHdlZXQpLFxyXG4gIHBhdGNoOiBhdXRoTWlkZGxld2FyZShoYW5kbGVQYXRjaFR3ZWV0KSxcclxuICBvcHRpb25zOiBoYW5kbGVPcHRpb25zLFxyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGhhbmRsZXI7XHJcbiJdLCJuYW1lcyI6WyJtZXRob2RzIiwiYXV0aE1pZGRsZXdhcmUiLCJjcmVhdGVUd2VldCIsImdldFR3ZWV0QnlJZCIsImRlbGV0ZVR3ZWV0QnlJZCIsInVwZGF0ZU9uZVR3ZWV0IiwiaGFuZGxlUG9zdFR3ZWV0IiwicmVxIiwicmVzIiwidG9rZW4iLCJjcmVhdGVkIiwiYm9keSIsInNlbmQiLCJoYW5kbGVHZXRUd2VldCIsInR3ZWV0IiwicXVlcnkiLCJpZCIsImRhdGEiLCJoYW5kbGVEZWxldGVUd2VldCIsInR3ZWV0SWQiLCJyZXN1bHQiLCJoYW5kbGVQYXRjaFR3ZWV0IiwibmV3RGF0YSIsInR3ZWV0SWRUb051bWJlciIsIk51bWJlciIsImhhbmRsZU9wdGlvbnMiLCJzdGF0dXMiLCJoYW5kbGVyIiwicG9zdCIsImdldCIsImRlbGV0ZSIsInBhdGNoIiwib3B0aW9ucyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/tweet/index.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/tweet/index.ts"));
module.exports = __webpack_exports__;

})();